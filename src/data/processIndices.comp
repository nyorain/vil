#version 460

layout(local_size_x = 64) in;

// TODO: could find a way to not need this, but will
// make code a lot more complicated (especially for non-4-byte-aligned
// vertex strides).
#extension GL_EXT_shader_16bit_storage : require
#extension GL_GOOGLE_include_directive : require

#define u16 uint16_t
#define u8 uint8_t

#include "vertexCopy.glsl"

// defined during compilation for the different variants
// #define IndexType uint
// #define IndexType u16

layout(set = 0, binding = 0) readonly buffer Indices {
	IndexType srcIndices[];
};

layout(set = 0, binding = 1) buffer OutData {
	uint indexCount;
	uint _pad;
	uint minIndex;
	uint maxIndex;
	IndexType dstIndices[];
};

void main() {
	uint offset = gl_GlobalInvocationID.x * indicesPerInvoc;

	uint ownMax = 0u;
	uint ownMin = 0xFFFFFFFFu;

	uint maxCount = min(indexCount, dstIndices.length());
	for(uint i = 0u; i < indicesPerInvoc && offset + i < maxCount; ++i) {
		uint index = uint(srcIndices[offset + i]);
		ownMin = min(ownMin, index);
		ownMax = max(ownMax, index);

		dstIndices[offset + i] = IndexType(index);
	}

	atomicMax(maxIndex, ownMax);
	atomicMin(minIndex, ownMin);
}

